<!doctype html>
<html>

<head>
  <%- include ('./head/head') %>
  <script src="/socket.io/socket.io.js"></script>
  <script>
    //comment websocket
    const socket = io.connect('http://localhost:3000', {
      path: '/socket.io',
    });
    var post_index = $(location).attr('pathname').split("/");

    socket.on('cmt/'+post_index[2] + '/' + post_index[3], (data) => {
      //new comment coming!
      //console.log(data);
      //set new comment
      new_cmt(data.cmt_id, data.nickname, data.comment, data.date);
      //comment animation
      var autoheight = $("#cmt_id_" + data.cmt_id).children(".comment-inputtextBlock").height();
      $("#cmt_id_" + data.cmt_id).children(".comment-inputtextBlock").css({
        height: 1
      });
      $("#cmt_id_" + data.cmt_id).children(".comment-inputtextBlock").animate({
        height: autoheight
      }, 500);
    });
    socket.on('cmt/'+post_index[2]+'/'+post_index[3]+'/typing', (data) => {
      //someone is typing comment contents or delete comment contents!
      var nickname = data.id;
      if(data.typing){
        //someone is typing
        var $input = document.createElement('li');
        $input.innerHTML =
        `<div id="`+nickname+`"class="comment-block">
          <div class="comment-nicknameBlock">
            <div class="comment-nicknameBox">
              <p>`+nickname+`</p>
            </div>
          </div>
          <div class="comment-inputtextBlock">
            <div class="comment-inputtextBox">
              <hgroup class="speech-bubble" role="textbox" maxlength="999" spellcheck="false">
                <p>. . .</p>
              </hgroup>
            </div>
          </div>
        </div>`;
        $("#cmt_list").append($input);

        //animation
        var autoheight = $('#'+nickname).children(".comment-inputtextBlock").height();
        $('#'+nickname).children(".comment-inputtextBlock").css({
          height:1
        });
        $('#'+nickname).children(".comment-inputtextBlock").animate({
          height:autoheight
        },500);
      }
      else {
        //someone delete contents
        $('#'+nickname).remove();
        // $('#' + nickname).animate({
        //   height:1
        // },500);
        // setTimeout(()=>{
        //   $('#'+nickname).remove();
        // },500);
      }
    });

    //socket.io error
    socket.on("error", (data) => {
      //comment write error!
      if (data === "cmt err!") {
        alert("comment error!");
        location.reload();
      }
    });
    $(document).ready(() => {
      //send comment
      $("#cmt-input-postButton").click(() => {
        var cmt_text = $("#cmt-input-text").val();
        if ($.trim(cmt_text) === "") {
          //text 내용 없을경우
          alert("내용을 입력해주세요.");
          return;
        }
        var post_data = {
          "id": $("#cmt-input-id").text(),
          "text": cmt_text
        };
        cmt_input_text_emptycheck = true;
        socket.emit('cmt/'+ post_index[2] + '/' + post_index[3] + "/typing", {typing:false,id:$("#cmt-input-id").text()});
        socket.emit('cmt/' + post_index[2] + '/' + post_index[3], post_data);
        $("#cmt-input-text").val("");
        /*$.ajax({
          //댓글 달기 ajax (POST to /comment)
          url: $(location).attr('href') + "/comment",
          type: "POST",
          dataType: "json",
          contentType: "application/json",
          data: JSON.stringify({
            "id": $("#cmt-input-id").text(),
            "text": cmt_text
          }),
          success: (res) => {
            console.log(res);
            //new_cmt(res.id,res.text,res.time);
            $("#cmt-input-text").val("");
          },
          error: (req, status, err) => {
            console.log("comment error!", req.responseJSON.error);
          }
        });*/
      });


      //comment typing effect
      var cmt_input_text_emptycheck = true;
      $("#cmt-input-text").on('input', (event) => {
        if ($.trim($("#cmt-input-text").val()) === "") {
          //emit to server nothing in comment
          cmt_input_text_emptycheck = true;
          socket.emit('cmt/'+ post_index[2] + '/' + post_index[3] + "/typing", {typing:false,id:$("#cmt-input-id").text()});
        }
        else if (cmt_input_text_emptycheck) {
          //emit to server I am typing
          cmt_input_text_emptycheck = false;
          socket.emit('cmt/'+ post_index[2] + '/' + post_index[3] + "/typing", {typing:true,id:$("#cmt-input-id").text()});
        }
      });

      //before webpage closing
      $(window).on("beforeunload", () => {
        //comment typing update
        socket.emit('cmt/'+ post_index[2] + '/' + post_index[3] + "/typing", {typing:false,id:$("#cmt-input-id").text()});
      });
    });
  </script>
</head>

<body>
  <%- include ('./body/nav_bar') %>
  <%- include ('./body/board_title') %>
  <%- include ('./body/post') %>
  <%- include ('./body/comment') %>
</body>

</html>
